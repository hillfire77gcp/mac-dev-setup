[project]
name = "{{ project_slug }}"
version = "0.1.0"
description = "{{ project_description }}"
authors = [
    {name = "{{ author_name }}", email = "{{ author_email }}"}
]
readme = "README.md"
requires-python = ">={{ python_version }}"
license = {text = "{{ license }}"}
keywords = ["cli", "tool"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: {{ license }} License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: {{ python_version }}",
]

dependencies = [
    {% if use_typer -%}
    "typer[all]>=0.12.0",
    {% endif -%}
    {% if use_rich -%}
    "rich>=13.0.0",
    {% endif -%}
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
]

[project.urls]
Homepage = "https://github.com/{{ github_username }}/{{ project_slug }}"
Documentation = "https://github.com/{{ github_username }}/{{ project_slug }}#readme"
Repository = "https://github.com/{{ github_username }}/{{ project_slug }}"
Issues = "https://github.com/{{ github_username }}/{{ project_slug }}/issues"

[project.scripts]
{{ project_slug }} = "{{ project_slug }}.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/{{ project_slug }}"]

[tool.ruff]
line-length = 88
target-version = "py{{ python_version | replace('.', '') }}"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PTH", # flake8-use-pathlib
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "{{ python_version }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov={{ project_slug }}",
    "--cov-report=html",
    "--cov-report=term-missing",
    "-v",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
